diff -up VirtualBox-6.1.24/src/VBox/Devices/EFI/Firmware/OvmfPkg/OvmfPkgIa32.dsc.30~ VirtualBox-6.1.24/src/VBox/Devices/EFI/Firmware/OvmfPkg/OvmfPkgIa32.dsc
--- VirtualBox-6.1.24/src/VBox/Devices/EFI/Firmware/OvmfPkg/OvmfPkgIa32.dsc.30~	2021-07-16 13:55:33.000000000 +0200
+++ VirtualBox-6.1.24/src/VBox/Devices/EFI/Firmware/OvmfPkg/OvmfPkgIa32.dsc	2021-07-21 17:40:35.708162131 +0200
@@ -873,7 +873,6 @@
     <LibraryClasses>
       PcdLib|MdePkg/Library/DxePcdLib/DxePcdLib.inf
  }
- VBoxPkg/VBoxFsDxe/VBoxIso9660.inf
  VBoxPkg/VBoxFsDxe/VBoxHfs.inf
  VBoxPkg/VBoxSysTables/VBoxSysTables.inf
  VBoxPkg/VBoxAppleSim/VBoxAppleSim.inf
diff -up VirtualBox-6.1.24/src/VBox/Devices/EFI/Firmware/OvmfPkg/OvmfPkgIa32.fdf.30~ VirtualBox-6.1.24/src/VBox/Devices/EFI/Firmware/OvmfPkg/OvmfPkgIa32.fdf
--- VirtualBox-6.1.24/src/VBox/Devices/EFI/Firmware/OvmfPkg/OvmfPkgIa32.fdf.30~	2021-07-16 13:55:33.000000000 +0200
+++ VirtualBox-6.1.24/src/VBox/Devices/EFI/Firmware/OvmfPkg/OvmfPkgIa32.fdf	2021-07-21 17:40:35.708162131 +0200
@@ -278,7 +278,6 @@ INF  OvmfPkg/SmbiosPlatformDxe/SmbiosPla
 !ifdef $(VBOX)
 INF VBoxPkg/VBoxVgaMiniPortDxe/VBoxVgaMiniPortDxe.inf
 INF VBoxPkg/VBoxVgaDxe/VBoxVgaDxe.inf
-INF VBoxPkg/VBoxFsDxe/VBoxIso9660.inf
 INF VBoxPkg/VBoxFsDxe/VBoxHfs.inf
 INF VBoxPkg/VBoxSysTables/VBoxSysTables.inf
 INF VBoxPkg/VBoxAppleSim/VBoxAppleSim.inf
diff -up VirtualBox-6.1.24/src/VBox/Devices/EFI/Firmware/OvmfPkg/OvmfPkgX64.dsc.30~ VirtualBox-6.1.24/src/VBox/Devices/EFI/Firmware/OvmfPkg/OvmfPkgX64.dsc
--- VirtualBox-6.1.24/src/VBox/Devices/EFI/Firmware/OvmfPkg/OvmfPkgX64.dsc.30~	2021-07-16 13:55:33.000000000 +0200
+++ VirtualBox-6.1.24/src/VBox/Devices/EFI/Firmware/OvmfPkg/OvmfPkgX64.dsc	2021-07-21 17:40:35.708162131 +0200
@@ -879,7 +879,6 @@
     <LibraryClasses>
       PcdLib|MdePkg/Library/DxePcdLib/DxePcdLib.inf
  }
- VBoxPkg/VBoxFsDxe/VBoxIso9660.inf
  VBoxPkg/VBoxFsDxe/VBoxHfs.inf
  VBoxPkg/VBoxSysTables/VBoxSysTables.inf
  VBoxPkg/VBoxAppleSim/VBoxAppleSim.inf
diff -up VirtualBox-6.1.24/src/VBox/Devices/EFI/Firmware/OvmfPkg/OvmfPkgX64.fdf.30~ VirtualBox-6.1.24/src/VBox/Devices/EFI/Firmware/OvmfPkg/OvmfPkgX64.fdf
--- VirtualBox-6.1.24/src/VBox/Devices/EFI/Firmware/OvmfPkg/OvmfPkgX64.fdf.30~	2021-07-16 13:55:33.000000000 +0200
+++ VirtualBox-6.1.24/src/VBox/Devices/EFI/Firmware/OvmfPkg/OvmfPkgX64.fdf	2021-07-21 17:40:35.709162147 +0200
@@ -279,7 +279,6 @@ INF  OvmfPkg/SmbiosPlatformDxe/SmbiosPla
 !ifdef $(VBOX)
 INF VBoxPkg/VBoxVgaMiniPortDxe/VBoxVgaMiniPortDxe.inf
 INF VBoxPkg/VBoxVgaDxe/VBoxVgaDxe.inf
-INF VBoxPkg/VBoxFsDxe/VBoxIso9660.inf
 INF VBoxPkg/VBoxFsDxe/VBoxHfs.inf
 INF VBoxPkg/VBoxSysTables/VBoxSysTables.inf
 INF VBoxPkg/VBoxAppleSim/VBoxAppleSim.inf
diff -up VirtualBox-6.1.24/src/VBox/Devices/EFI/Firmware/VBoxPkg/VBoxFsDxe/fsw_efi.c.30~ VirtualBox-6.1.24/src/VBox/Devices/EFI/Firmware/VBoxPkg/VBoxFsDxe/fsw_efi.c
--- VirtualBox-6.1.24/src/VBox/Devices/EFI/Firmware/VBoxPkg/VBoxFsDxe/fsw_efi.c.30~	2021-07-16 13:56:03.000000000 +0200
+++ VirtualBox-6.1.24/src/VBox/Devices/EFI/Firmware/VBoxPkg/VBoxFsDxe/fsw_efi.c	2021-07-21 17:42:19.261775767 +0200
@@ -58,11 +58,6 @@
 
 #include "fsw_efi.h"
 
-#ifdef VBOX
-# include <IndustryStandard/ElTorito.h>
-# include <IndustryStandard/Udf.h>
-#endif
-
 #define DEBUG_LEVEL 0
 
 #ifndef FSTYPE
@@ -141,7 +136,7 @@ EFI_STATUS fsw_efi_dnode_fill_FileInfo(I
                                        IN OUT UINTN *BufferSize,
                                        OUT VOID *Buffer);
 
-#if defined(VBOX) && defined(FSTYPE_HFS)
+#if defined(VBOX) && (FSTYPE == hfs)
 extern fsw_status_t fsw_hfs_get_blessed_file(void *vol, struct fsw_string *path);
 #endif
 
@@ -265,125 +260,6 @@ EFI_STATUS EFIAPI fsw_efi_DriverBinding_
     return Status;
 }
 
-#if defined(VBOX) && !defined(FSTYPE_HFS)
-/**
-  Find UDF volume identifiers in a Volume Recognition Sequence.
-
-  @param[in]  BlockIo             BlockIo interface.
-  @param[in]  DiskIo              DiskIo interface.
-
-  @retval EFI_SUCCESS             UDF volume identifiers were found.
-  @retval EFI_NOT_FOUND           UDF volume identifiers were not found.
-  @retval other                   Failed to perform disk I/O.
-
-**/
-EFI_STATUS
-FindUdfVolumeIdentifiers (
-  IN EFI_BLOCK_IO_PROTOCOL  *BlockIo,
-  IN EFI_DISK_IO_PROTOCOL   *DiskIo
-  )
-{
-  EFI_STATUS                            Status;
-  UINT64                                Offset;
-  UINT64                                EndDiskOffset;
-  CDROM_VOLUME_DESCRIPTOR               VolDescriptor;
-  CDROM_VOLUME_DESCRIPTOR               TerminatingVolDescriptor;
-
-  ZeroMem ((VOID *)&TerminatingVolDescriptor, sizeof (CDROM_VOLUME_DESCRIPTOR));
-
-  //
-  // Start Volume Recognition Sequence
-  //
-  EndDiskOffset = MultU64x32 (BlockIo->Media->LastBlock,
-                              BlockIo->Media->BlockSize);
-
-  for (Offset = UDF_VRS_START_OFFSET; Offset < EndDiskOffset;
-       Offset += UDF_LOGICAL_SECTOR_SIZE) {
-    //
-    // Check if block device has a Volume Structure Descriptor and an Extended
-    // Area.
-    //
-    Status = DiskIo->ReadDisk (
-      DiskIo,
-      BlockIo->Media->MediaId,
-      Offset,
-      sizeof (CDROM_VOLUME_DESCRIPTOR),
-      (VOID *)&VolDescriptor
-      );
-    if (EFI_ERROR (Status)) {
-      return Status;
-    }
-
-    if (CompareMem ((VOID *)VolDescriptor.Unknown.Id,
-                    (VOID *)UDF_BEA_IDENTIFIER,
-                    sizeof (VolDescriptor.Unknown.Id)) == 0) {
-      break;
-    }
-
-    if (CompareMem ((VOID *)&VolDescriptor,
-                     (VOID *)&TerminatingVolDescriptor,
-                     sizeof (CDROM_VOLUME_DESCRIPTOR)) == 0) {
-      return EFI_NOT_FOUND;
-    }
-  }
-
-  //
-  // Look for "NSR0{2,3}" identifiers in the Extended Area.
-  //
-  Offset += UDF_LOGICAL_SECTOR_SIZE;
-  if (Offset >= EndDiskOffset) {
-    return EFI_NOT_FOUND;
-  }
-
-  Status = DiskIo->ReadDisk (
-    DiskIo,
-    BlockIo->Media->MediaId,
-    Offset,
-    sizeof (CDROM_VOLUME_DESCRIPTOR),
-    (VOID *)&VolDescriptor
-    );
-  if (EFI_ERROR (Status)) {
-    return Status;
-  }
-
-  if ((CompareMem ((VOID *)VolDescriptor.Unknown.Id,
-                   (VOID *)UDF_NSR2_IDENTIFIER,
-                   sizeof (VolDescriptor.Unknown.Id)) != 0) &&
-      (CompareMem ((VOID *)VolDescriptor.Unknown.Id,
-                   (VOID *)UDF_NSR3_IDENTIFIER,
-                   sizeof (VolDescriptor.Unknown.Id)) != 0)) {
-    return EFI_NOT_FOUND;
-  }
-
-  //
-  // Look for "TEA01" identifier in the Extended Area
-  //
-  Offset += UDF_LOGICAL_SECTOR_SIZE;
-  if (Offset >= EndDiskOffset) {
-    return EFI_NOT_FOUND;
-  }
-
-  Status = DiskIo->ReadDisk (
-    DiskIo,
-    BlockIo->Media->MediaId,
-    Offset,
-    sizeof (CDROM_VOLUME_DESCRIPTOR),
-    (VOID *)&VolDescriptor
-    );
-  if (EFI_ERROR (Status)) {
-    return Status;
-  }
-
-  if (CompareMem ((VOID *)VolDescriptor.Unknown.Id,
-                  (VOID *)UDF_TEA_IDENTIFIER,
-                  sizeof (VolDescriptor.Unknown.Id)) != 0) {
-    return EFI_NOT_FOUND;
-  }
-
-  return EFI_SUCCESS;
-}
-#endif
-
 static EFI_STATUS fsw_efi_ReMount(IN FSW_VOLUME_DATA *pVolume,
                                        IN EFI_HANDLE      ControllerHandle,
                                        EFI_DISK_IO        *pDiskIo,
@@ -400,20 +276,6 @@ static EFI_STATUS fsw_efi_ReMount(IN FSW
     Status = fsw_efi_map_status(fsw_mount(pVolume, &fsw_efi_host_table,
                                           &FSW_FSTYPE_TABLE_NAME(FSTYPE), &pVolume->vol),
                                 pVolume);
-#if defined(VBOX) && !defined(FSTYPE_HFS)
-    /*
-     * Don't give the iso9660 filesystem driver a chance to claim a volume which supports UDF
-     * or we loose booting capability from UDF volumes.
-     */
-    if (!EFI_ERROR(Status))
-    {
-        Status = FindUdfVolumeIdentifiers(pBlockIo, pDiskIo);
-        if (!EFI_ERROR(Status))
-            Status = EFI_UNSUPPORTED;
-        else
-            Status = EFI_SUCCESS;
-    }
-#endif
 
     if (!EFI_ERROR(Status)) {
         // register the SimpleFileSystem protocol
@@ -1124,9 +986,10 @@ EFI_STATUS fsw_efi_dnode_getinfo(IN FSW_
         *BufferSize = RequiredSize;
         Status = EFI_SUCCESS;
 
-#if defined(VBOX) && defined(FSTYPE_HFS)
+#ifdef VBOX
     } else if (CompareGuid(InformationType, &gVBoxFsBlessedFileInfoGuid)) {
 
+# if FSTYPE == hfs
         struct fsw_string StrBlessedFile;
 
         fsw_status_t rc = fsw_hfs_get_blessed_file(Volume->vol, &StrBlessedFile);
@@ -1147,6 +1010,7 @@ EFI_STATUS fsw_efi_dnode_getinfo(IN FSW_
             Status = EFI_SUCCESS;
         }
         else
+# endif
             Status = EFI_UNSUPPORTED;
 #endif
 
diff -up VirtualBox-6.1.24/src/VBox/Devices/EFI/Firmware/VBoxPkg/VBoxFsDxe/VBoxHfs.inf.30~ VirtualBox-6.1.24/src/VBox/Devices/EFI/Firmware/VBoxPkg/VBoxFsDxe/VBoxHfs.inf
--- VirtualBox-6.1.24/src/VBox/Devices/EFI/Firmware/VBoxPkg/VBoxFsDxe/VBoxHfs.inf.30~	2021-07-16 13:56:03.000000000 +0200
+++ VirtualBox-6.1.24/src/VBox/Devices/EFI/Firmware/VBoxPkg/VBoxFsDxe/VBoxHfs.inf	2021-07-21 17:40:35.709162147 +0200
@@ -78,8 +78,8 @@
   gEfiMdePkgTokenSpaceGuid.PcdUefiVariableDefaultPlatformLang
 
 [BuildOptions.common]
-    GCC:*_*_*_CC_FLAGS = -DFSTYPE=hfs -DFSTYPE_HFS=1 -DEFI_LOG_ENABLED=1
+    GCC:*_*_*_CC_FLAGS = -DFSTYPE=hfs -DEFI_LOG_ENABLED=1
 # -DFSW_DEBUG_LEVEL=3
-  INTEL:*_*_*_CC_FLAGS = -DFSTYPE=hfs -DFSTYPE_HFS=1 -DEFI_LOG_ENABLED=1
-   MSFT:*_*_*_CC_FLAGS = -DFSTYPE=hfs -DFSTYPE_HFS=1 -DEFI_LOG_ENABLED=1
+  INTEL:*_*_*_CC_FLAGS = -DFSTYPE=hfs -DEFI_LOG_ENABLED=1
+   MSFT:*_*_*_CC_FLAGS = -DFSTYPE=hfs -DEFI_LOG_ENABLED=1
 
